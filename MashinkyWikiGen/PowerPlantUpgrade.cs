using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace MashinkyWikiGen
{
    /// <summary>
    /// Represents an upgrade for power plant buildings that enhances both production and electrical generation.
    /// Power plant upgrades can modify electricity output in addition to normal production capabilities.
    /// </summary>
    public class PowerPlantUpgrade : IndustryBuildingUpgrade
    {
        /// <summary>
        /// The amount of electricity generated by this power plant upgrade per production cycle.
        /// </summary>
        public int ElGeneration { get; private set; }
        
        /// <summary>
        /// The effect description explaining how this upgrade modifies the power plant's behavior.
        /// </summary>
        public string Effect { get; private set; }
        
        /// <summary>
        /// Initializes a new instance of the PowerPlantUpgrade class.
        /// </summary>
        /// <param name="effect">The effect description explaining how this upgrade modifies the power plant's behavior</param>
        /// <param name="elGeneration">The amount of electricity generated per production cycle</param>
        /// <param name="rules">The list of production rules that this upgrade adds to the base building</param>
        /// <param name="description">The description text explaining what this upgrade does</param>
        /// <param name="epoch">The epoch when this upgrade becomes available for purchase</param>
        /// <param name="name">The display name of the building upgrade</param>
        /// <param name="dimX">The width dimension of the upgrade in tiles</param>
        /// <param name="dimY">The height dimension of the upgrade in tiles</param>
        /// <param name="cost1Count">The amount of the first currency/resource required to purchase</param>
        /// <param name="cost1Type">The type of the first currency/resource required to purchase</param>
        /// <param name="cost2Count">The amount of the second currency/resource required to purchase (if any)</param>
        /// <param name="cost2Type">The type of the second currency/resource required to purchase (if any)</param>
        /// <param name="cost3Count">The amount of the third currency/resource required to purchase (if any)</param>
        /// <param name="cost3Type">The type of the third currency/resource required to purchase (if any)</param>
        public PowerPlantUpgrade(string effect, int elGeneration, List<ProductionRule> rules, string description, int epoch, string name, int dimX, int dimY, int cost1Count, Token cost1Type, int cost2Count, Token cost2Type, int cost3Count, Token cost3Type) : base(rules, description, epoch, name, dimX, dimY, cost1Count, cost1Type, cost2Count, cost2Type, cost3Count, cost3Type)
        {
            ElGeneration = elGeneration;
            Effect = effect;
        }
    }
}
