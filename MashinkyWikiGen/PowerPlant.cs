using System.Collections.Generic;
using System.Drawing;

namespace MashinkyWikiGen
{
    /// <summary>
    /// Represents a power plant building that generates electricity in addition to normal production.
    /// Power plants extend industry buildings with electrical generation capabilities.
    /// </summary>
    public class PowerPlant : IndustryBuilding
    {
        /// <summary>
        /// The amount of electricity generated by this power plant per production cycle.
        /// </summary>
        public int ElGenerated { get; private set; }
        
        /// <summary>
        /// Initializes a new instance of the PowerPlant class.
        /// </summary>
        /// <param name="elGenerated">The amount of electricity generated per production cycle</param>
        /// <param name="upgrades">The list of available upgrades for this building</param>
        /// <param name="rules">The list of production rules that define what this building can produce</param>
        /// <param name="mainOutput">The icon image for this building</param>
        /// <param name="bonusDistance">The distance in tiles for bonus resource production</param>
        /// <param name="pollutionRange">The pollution range in tiles (0 if no pollution)</param>
        /// <param name="iD">The unique identifier for this building from the game data</param>
        /// <param name="name">The display name of the building</param>
        /// <param name="dimX">The width dimension of the building in tiles</param>
        /// <param name="dimY">The height dimension of the building in tiles</param>
        /// <param name="countPerEpoch">The number of buildings spawned at the start of each epoch</param>
        public PowerPlant(int elGenerated, List<IndustryBuildingUpgrade> upgrades, List<ProductionRule> rules, Bitmap mainOutput, int bonusDistance, int pollutionRange, string iD, string name, int dimX, int dimY, int[] countPerEpoch) : base(upgrades, rules, mainOutput, bonusDistance, pollutionRange, iD, name, dimX, dimY, countPerEpoch)
        {
            ElGenerated = elGenerated;
        }

        

    }
}
